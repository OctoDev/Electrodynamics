package electrodynamics.client.model;

import electrodynamics.api.render.ModelTechne;
import net.minecraft.client.model.ModelRenderer;

public class ModelMobGrinder extends ModelTechne {
	ModelRenderer bladeH1;
	ModelRenderer bladeC1;
	ModelRenderer bladeV1;
	ModelRenderer bladeV2;
	ModelRenderer bladeC2;
	ModelRenderer bladeH2;
	ModelRenderer bladeH16;
	ModelRenderer bladeC16;
	ModelRenderer bladeV16;
	ModelRenderer bladeH15;
	ModelRenderer bladeC15;
	ModelRenderer bladeV15;
	ModelRenderer bladeH14;
	ModelRenderer bladeC14;
	ModelRenderer bladeV14;
	ModelRenderer bladeH13;
	ModelRenderer bladeC13;
	ModelRenderer bladeV13;
	ModelRenderer bladeH12;
	ModelRenderer bladeC12;
	ModelRenderer bladeV12;
	ModelRenderer bladeH11;
	ModelRenderer bladeC11;
	ModelRenderer bladeV11;
	ModelRenderer bladeH10;
	ModelRenderer bladeC10;
	ModelRenderer bladeV10;
	ModelRenderer bladeH9;
	ModelRenderer bladeC9;
	ModelRenderer bladeV9;
	ModelRenderer bladeH8;
	ModelRenderer bladeC8;
	ModelRenderer bladeV8;
	ModelRenderer bladeC7;
	ModelRenderer bladeH7;
	ModelRenderer bladeV7;
	ModelRenderer bladeH6;
	ModelRenderer bladeC6;
	ModelRenderer bladeV6;
	ModelRenderer bladeH5;
	ModelRenderer bladeC5;
	ModelRenderer bladeV5;
	ModelRenderer bladeH4;
	ModelRenderer bladeC4;
	ModelRenderer bladeV4;
	ModelRenderer bladeH3;
	ModelRenderer bladeC3;
	ModelRenderer bladeV3;
	ModelRenderer grinderBase;
	ModelRenderer dropDoorBack;
	ModelRenderer dropDoorFront;
	ModelRenderer rotaryShaft;
	ModelRenderer insideWallBack;
	ModelRenderer insideWallFront;
	ModelRenderer topFrameRight;
	ModelRenderer topFrameFront;
	ModelRenderer topFrameBack;
	ModelRenderer topFrameLeft;
	ModelRenderer post4;
	ModelRenderer post3;
	ModelRenderer post2;
	ModelRenderer post1;
	ModelRenderer leftWall;
	ModelRenderer rightWall;
	ModelRenderer pipeOutput;
	ModelRenderer pipe1;
	ModelRenderer pipe2;
	ModelRenderer pipeClamp1;
	ModelRenderer pipeClamp2;

	public ModelMobGrinder() {
		textureWidth = 512;
		textureHeight = 256;

		bladeH1 = new ModelRenderer(this, 0, 16);
		bladeH1.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH1.setRotationPoint(18.5F, 8F, 0F);
		bladeH1.setTextureSize(512, 256);
		bladeH1.mirror = true;
		setRotation(bladeH1, 0.7853982F, 0F, 0F);
		bladeC1 = new ModelRenderer(this, 32, 32);
		bladeC1.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC1.setRotationPoint(18.5F, 8F, 0F);
		bladeC1.setTextureSize(512, 256);
		bladeC1.mirror = true;
		setRotation(bladeC1, 0.7853982F, 0F, 0F);
		bladeV1 = new ModelRenderer(this, 0, 32);
		bladeV1.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV1.setRotationPoint(18.5F, 8F, 0F);
		bladeV1.setTextureSize(512, 256);
		bladeV1.mirror = true;
		setRotation(bladeV1, 0.7853982F, 0F, 0F);
		bladeV2 = new ModelRenderer(this, 0, 32);
		bladeV2.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV2.setRotationPoint(16F, 8F, 0F);
		bladeV2.setTextureSize(512, 256);
		bladeV2.mirror = true;
		setRotation(bladeV2, 0F, 0F, 0F);
		bladeC2 = new ModelRenderer(this, 32, 32);
		bladeC2.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC2.setRotationPoint(16F, 8F, 0F);
		bladeC2.setTextureSize(512, 256);
		bladeC2.mirror = true;
		setRotation(bladeC2, 0F, 0F, 0F);
		bladeH2 = new ModelRenderer(this, 0, 16);
		bladeH2.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH2.setRotationPoint(16F, 8F, 0F);
		bladeH2.setTextureSize(512, 256);
		bladeH2.mirror = true;
		setRotation(bladeH2, 0F, 0F, 0F);
		bladeH16 = new ModelRenderer(this, 0, 16);
		bladeH16.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH16.setRotationPoint(-19F, 8F, 0F);
		bladeH16.setTextureSize(512, 256);
		bladeH16.mirror = true;
		setRotation(bladeH16, 0F, 0F, 0F);
		bladeC16 = new ModelRenderer(this, 32, 32);
		bladeC16.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC16.setRotationPoint(-19F, 8F, 0F);
		bladeC16.setTextureSize(512, 256);
		bladeC16.mirror = true;
		setRotation(bladeC16, 0F, 0F, 0F);
		bladeV16 = new ModelRenderer(this, 0, 32);
		bladeV16.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV16.setRotationPoint(-19F, 8F, 0F);
		bladeV16.setTextureSize(512, 256);
		bladeV16.mirror = true;
		setRotation(bladeV16, 0F, 0F, 0F);
		bladeH15 = new ModelRenderer(this, 0, 16);
		bladeH15.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH15.setRotationPoint(-16.5F, 8F, 0F);
		bladeH15.setTextureSize(512, 256);
		bladeH15.mirror = true;
		setRotation(bladeH15, 0.7853982F, 0F, 0F);
		bladeC15 = new ModelRenderer(this, 32, 32);
		bladeC15.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC15.setRotationPoint(-16.5F, 8F, 0F);
		bladeC15.setTextureSize(512, 256);
		bladeC15.mirror = true;
		setRotation(bladeC15, 0.7853982F, 0F, 0F);
		bladeV15 = new ModelRenderer(this, 0, 32);
		bladeV15.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV15.setRotationPoint(-16.5F, 8F, 0F);
		bladeV15.setTextureSize(512, 256);
		bladeV15.mirror = true;
		setRotation(bladeV15, 0.7853982F, 0F, 0F);
		bladeH14 = new ModelRenderer(this, 0, 16);
		bladeH14.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH14.setRotationPoint(-14F, 8F, 0F);
		bladeH14.setTextureSize(512, 256);
		bladeH14.mirror = true;
		setRotation(bladeH14, 0F, 0F, 0F);
		bladeC14 = new ModelRenderer(this, 32, 32);
		bladeC14.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC14.setRotationPoint(-14F, 8F, 0F);
		bladeC14.setTextureSize(512, 256);
		bladeC14.mirror = true;
		setRotation(bladeC14, 0F, 0F, 0F);
		bladeV14 = new ModelRenderer(this, 0, 32);
		bladeV14.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV14.setRotationPoint(-14F, 8F, 0F);
		bladeV14.setTextureSize(512, 256);
		bladeV14.mirror = true;
		setRotation(bladeV14, 0F, 0F, 0F);
		bladeH13 = new ModelRenderer(this, 0, 16);
		bladeH13.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH13.setRotationPoint(-11.5F, 8F, 0F);
		bladeH13.setTextureSize(512, 256);
		bladeH13.mirror = true;
		setRotation(bladeH13, 0.7853982F, 0F, 0F);
		bladeC13 = new ModelRenderer(this, 32, 32);
		bladeC13.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC13.setRotationPoint(-11.5F, 8F, 0F);
		bladeC13.setTextureSize(512, 256);
		bladeC13.mirror = true;
		setRotation(bladeC13, 0.7853982F, 0F, 0F);
		bladeV13 = new ModelRenderer(this, 0, 32);
		bladeV13.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV13.setRotationPoint(-11.5F, 8F, 0F);
		bladeV13.setTextureSize(512, 256);
		bladeV13.mirror = true;
		setRotation(bladeV13, 0.7853982F, 0F, 0F);
		bladeH12 = new ModelRenderer(this, 0, 16);
		bladeH12.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH12.setRotationPoint(-9F, 8F, 0F);
		bladeH12.setTextureSize(512, 256);
		bladeH12.mirror = true;
		setRotation(bladeH12, 0F, 0F, 0F);
		bladeC12 = new ModelRenderer(this, 32, 32);
		bladeC12.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC12.setRotationPoint(-9F, 8F, 0F);
		bladeC12.setTextureSize(512, 256);
		bladeC12.mirror = true;
		setRotation(bladeC12, 0F, 0F, 0F);
		bladeV12 = new ModelRenderer(this, 0, 32);
		bladeV12.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV12.setRotationPoint(-9F, 8F, 0F);
		bladeV12.setTextureSize(512, 256);
		bladeV12.mirror = true;
		setRotation(bladeV12, 0F, 0F, 0F);
		bladeH11 = new ModelRenderer(this, 0, 16);
		bladeH11.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH11.setRotationPoint(-6.5F, 8F, 0F);
		bladeH11.setTextureSize(512, 256);
		bladeH11.mirror = true;
		setRotation(bladeH11, 0.7853982F, 0F, 0F);
		bladeC11 = new ModelRenderer(this, 32, 32);
		bladeC11.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC11.setRotationPoint(-6.5F, 8F, 0F);
		bladeC11.setTextureSize(512, 256);
		bladeC11.mirror = true;
		setRotation(bladeC11, 0.7853982F, 0F, 0F);
		bladeV11 = new ModelRenderer(this, 0, 32);
		bladeV11.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV11.setRotationPoint(-6.5F, 8F, 0F);
		bladeV11.setTextureSize(512, 256);
		bladeV11.mirror = true;
		setRotation(bladeV11, 0.7853982F, 0F, 0F);
		bladeH10 = new ModelRenderer(this, 0, 16);
		bladeH10.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH10.setRotationPoint(-4F, 8F, 0F);
		bladeH10.setTextureSize(512, 256);
		bladeH10.mirror = true;
		setRotation(bladeH10, 0F, 0F, 0F);
		bladeC10 = new ModelRenderer(this, 32, 32);
		bladeC10.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC10.setRotationPoint(-4F, 8F, 0F);
		bladeC10.setTextureSize(512, 256);
		bladeC10.mirror = true;
		setRotation(bladeC10, 0F, 0F, 0F);
		bladeV10 = new ModelRenderer(this, 0, 32);
		bladeV10.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV10.setRotationPoint(-4F, 8F, 0F);
		bladeV10.setTextureSize(512, 256);
		bladeV10.mirror = true;
		setRotation(bladeV10, 0F, 0F, 0F);
		bladeH9 = new ModelRenderer(this, 0, 16);
		bladeH9.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH9.setRotationPoint(-1.5F, 8F, 0F);
		bladeH9.setTextureSize(512, 256);
		bladeH9.mirror = true;
		setRotation(bladeH9, 0.7853982F, 0F, 0F);
		bladeC9 = new ModelRenderer(this, 32, 32);
		bladeC9.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC9.setRotationPoint(-1.5F, 8F, 0F);
		bladeC9.setTextureSize(512, 256);
		bladeC9.mirror = true;
		setRotation(bladeC9, 0.7853982F, 0F, 0F);
		bladeV9 = new ModelRenderer(this, 0, 32);
		bladeV9.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV9.setRotationPoint(-1.5F, 8F, 0F);
		bladeV9.setTextureSize(512, 256);
		bladeV9.mirror = true;
		setRotation(bladeV9, 0.7853982F, 0F, 0F);
		bladeH8 = new ModelRenderer(this, 0, 16);
		bladeH8.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH8.setRotationPoint(1F, 8F, 0F);
		bladeH8.setTextureSize(512, 256);
		bladeH8.mirror = true;
		setRotation(bladeH8, 0F, 0F, 0F);
		bladeC8 = new ModelRenderer(this, 32, 32);
		bladeC8.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC8.setRotationPoint(1F, 8F, 0F);
		bladeC8.setTextureSize(512, 256);
		bladeC8.mirror = true;
		setRotation(bladeC8, 0F, 0F, 0F);
		bladeV8 = new ModelRenderer(this, 0, 32);
		bladeV8.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV8.setRotationPoint(1F, 8F, 0F);
		bladeV8.setTextureSize(512, 256);
		bladeV8.mirror = true;
		setRotation(bladeV8, 0F, 0F, 0F);
		bladeC7 = new ModelRenderer(this, 32, 32);
		bladeC7.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC7.setRotationPoint(3.5F, 8F, 0F);
		bladeC7.setTextureSize(512, 256);
		bladeC7.mirror = true;
		setRotation(bladeC7, 0.7853982F, 0F, 0F);
		bladeH7 = new ModelRenderer(this, 0, 16);
		bladeH7.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH7.setRotationPoint(3.5F, 8F, 0F);
		bladeH7.setTextureSize(512, 256);
		bladeH7.mirror = true;
		setRotation(bladeH7, 0.7853982F, 0F, 0F);
		bladeV7 = new ModelRenderer(this, 0, 32);
		bladeV7.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV7.setRotationPoint(3.5F, 8F, 0F);
		bladeV7.setTextureSize(512, 256);
		bladeV7.mirror = true;
		setRotation(bladeV7, 0.7853982F, 0F, 0F);
		bladeH6 = new ModelRenderer(this, 0, 16);
		bladeH6.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH6.setRotationPoint(6F, 8F, 0F);
		bladeH6.setTextureSize(512, 256);
		bladeH6.mirror = true;
		setRotation(bladeH6, 0F, 0F, 0F);
		bladeC6 = new ModelRenderer(this, 32, 32);
		bladeC6.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC6.setRotationPoint(6F, 8F, 0F);
		bladeC6.setTextureSize(512, 256);
		bladeC6.mirror = true;
		setRotation(bladeC6, 0F, 0F, 0F);
		bladeV6 = new ModelRenderer(this, 0, 32);
		bladeV6.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV6.setRotationPoint(6F, 8F, 0F);
		bladeV6.setTextureSize(512, 256);
		bladeV6.mirror = true;
		setRotation(bladeV6, 0F, 0F, 0F);
		bladeH5 = new ModelRenderer(this, 0, 16);
		bladeH5.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH5.setRotationPoint(8.5F, 8F, 0F);
		bladeH5.setTextureSize(512, 256);
		bladeH5.mirror = true;
		setRotation(bladeH5, 0.7853982F, 0F, 0F);
		bladeC5 = new ModelRenderer(this, 32, 32);
		bladeC5.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC5.setRotationPoint(8.5F, 8F, 0F);
		bladeC5.setTextureSize(512, 256);
		bladeC5.mirror = true;
		setRotation(bladeC5, 0.7853982F, 0F, 0F);
		bladeV5 = new ModelRenderer(this, 0, 32);
		bladeV5.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV5.setRotationPoint(8.5F, 8F, 0F);
		bladeV5.setTextureSize(512, 256);
		bladeV5.mirror = true;
		setRotation(bladeV5, 0.7853982F, 0F, 0F);
		bladeH4 = new ModelRenderer(this, 0, 16);
		bladeH4.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH4.setRotationPoint(11F, 8F, 0F);
		bladeH4.setTextureSize(512, 256);
		bladeH4.mirror = true;
		setRotation(bladeH4, 0F, 0F, 0F);
		bladeC4 = new ModelRenderer(this, 32, 32);
		bladeC4.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC4.setRotationPoint(11F, 8F, 0F);
		bladeC4.setTextureSize(512, 256);
		bladeC4.mirror = true;
		setRotation(bladeC4, 0F, 0F, 0F);
		bladeV4 = new ModelRenderer(this, 0, 32);
		bladeV4.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV4.setRotationPoint(11F, 8F, 0F);
		bladeV4.setTextureSize(512, 256);
		bladeV4.mirror = true;
		setRotation(bladeV4, 0F, 0F, 0F);
		bladeH3 = new ModelRenderer(this, 0, 16);
		bladeH3.addBox(-1F, -1F, -6F, 2, 2, 12);
		bladeH3.setRotationPoint(13.5F, 8F, 0F);
		bladeH3.setTextureSize(512, 256);
		bladeH3.mirror = true;
		setRotation(bladeH3, 0.7853982F, 0F, 0F);
		bladeC3 = new ModelRenderer(this, 32, 32);
		bladeC3.addBox(-1F, -4F, -4F, 2, 8, 8);
		bladeC3.setRotationPoint(13.5F, 8F, 0F);
		bladeC3.setTextureSize(512, 256);
		bladeC3.mirror = true;
		setRotation(bladeC3, 0.7853982F, 0F, 0F);
		bladeV3 = new ModelRenderer(this, 0, 32);
		bladeV3.addBox(-1F, -6F, -1F, 2, 12, 2);
		bladeV3.setRotationPoint(13.5F, 8F, 0F);
		bladeV3.setTextureSize(512, 256);
		bladeV3.mirror = true;
		setRotation(bladeV3, 0.7853982F, 0F, 0F);
		grinderBase = new ModelRenderer(this, 0, 204);
		grinderBase.addBox(0F, 0F, 0F, 48, 4, 48);
		grinderBase.setRotationPoint(-24F, 20F, -24F);
		grinderBase.setTextureSize(512, 256);
		grinderBase.mirror = true;
		setRotation(grinderBase, 0F, 0F, 0F);
		dropDoorBack = new ModelRenderer(this, 0, 74);
		dropDoorBack.addBox(0F, 0F, -16F, 40, 2, 16);
		dropDoorBack.setRotationPoint(-20F, -8F, 16F);
		dropDoorBack.setTextureSize(512, 256);
		dropDoorBack.mirror = true;
		setRotation(dropDoorBack, 0.7853982F, 0F, 0F);
		dropDoorFront = new ModelRenderer(this, 112, 74);
		dropDoorFront.addBox(0F, 0F, 0F, 40, 2, 16);
		dropDoorFront.setRotationPoint(-20F, -8F, -16F);
		dropDoorFront.setTextureSize(512, 256);
		dropDoorFront.mirror = true;
		setRotation(dropDoorFront, -0.7853982F, 0F, 0F);
		rotaryShaft = new ModelRenderer(this, 0, 0);
		rotaryShaft.addBox(0F, -2F, -2F, 40, 4, 4);
		rotaryShaft.setRotationPoint(-20F, 8F, 0F);
		rotaryShaft.setTextureSize(512, 256);
		rotaryShaft.mirror = true;
		setRotation(rotaryShaft, 0F, 0F, 0F);
		insideWallBack = new ModelRenderer(this, 0, 184);
		insideWallBack.addBox(0F, 0F, 0F, 40, 18, 2);
		insideWallBack.setRotationPoint(-20F, 2F, 7F);
		insideWallBack.setTextureSize(512, 256);
		insideWallBack.mirror = true;
		setRotation(insideWallBack, 0F, 0F, 0F);
		insideWallFront = new ModelRenderer(this, 0, 52);
		insideWallFront.addBox(0F, 0F, 0F, 40, 18, 2);
		insideWallFront.setRotationPoint(-20F, 2F, -9F);
		insideWallFront.setTextureSize(512, 256);
		insideWallFront.mirror = true;
		setRotation(insideWallFront, 0F, 0F, 0F);
		topFrameRight = new ModelRenderer(this, 208, 96);
		topFrameRight.addBox(0F, 0F, 0F, 4, 12, 48);
		topFrameRight.setRotationPoint(-24F, -8F, -24F);
		topFrameRight.setTextureSize(512, 256);
		topFrameRight.mirror = true;
		setRotation(topFrameRight, 0F, 0F, 0F);
		topFrameFront = new ModelRenderer(this, 0, 92);
		topFrameFront.addBox(0F, 0F, 0F, 40, 12, 8);
		topFrameFront.setRotationPoint(-20F, -8F, -24F);
		topFrameFront.setTextureSize(512, 256);
		topFrameFront.mirror = true;
		setRotation(topFrameFront, 0F, 0F, 0F);
		topFrameBack = new ModelRenderer(this, 0, 122);
		topFrameBack.addBox(0F, 0F, 0F, 40, 12, 8);
		topFrameBack.setRotationPoint(-20F, -8F, 16F);
		topFrameBack.setTextureSize(512, 256);
		topFrameBack.mirror = true;
		setRotation(topFrameBack, 0F, 0F, 0F);
		topFrameLeft = new ModelRenderer(this, 104, 96);
		topFrameLeft.addBox(0F, 0F, 0F, 4, 12, 48);
		topFrameLeft.setRotationPoint(20F, -8F, -24F);
		topFrameLeft.setTextureSize(512, 256);
		topFrameLeft.mirror = true;
		setRotation(topFrameLeft, 0F, 0F, 0F);
		post4 = new ModelRenderer(this, 96, 128);
		post4.addBox(0F, 0F, 0F, 2, 16, 2);
		post4.setRotationPoint(-24F, 4F, 22F);
		post4.setTextureSize(512, 256);
		post4.mirror = true;
		setRotation(post4, 0F, 0F, 0F);
		post3 = new ModelRenderer(this, 96, 128);
		post3.addBox(0F, 0F, 0F, 2, 16, 2);
		post3.setRotationPoint(-24F, 4F, -24F);
		post3.setTextureSize(512, 256);
		post3.mirror = true;
		setRotation(post3, 0F, 0F, 0F);
		post2 = new ModelRenderer(this, 96, 128);
		post2.addBox(0F, 0F, 0F, 2, 16, 2);
		post2.setRotationPoint(22F, 4F, 22F);
		post2.setTextureSize(512, 256);
		post2.mirror = true;
		setRotation(post2, 0F, 0F, 0F);
		post1 = new ModelRenderer(this, 96, 128);
		post1.addBox(0F, 0F, 0F, 2, 16, 2);
		post1.setRotationPoint(22F, 4F, -24F);
		post1.setTextureSize(512, 256);
		post1.mirror = true;
		setRotation(post1, 0F, 0F, 0F);
		leftWall = new ModelRenderer(this, 41, 150);
		leftWall.addBox(0F, 0F, 0F, 2, 16, 18);
		leftWall.setRotationPoint(20F, 4F, -9F);
		leftWall.setTextureSize(512, 256);
		leftWall.mirror = true;
		setRotation(leftWall, 0F, 0F, 0F);
		rightWall = new ModelRenderer(this, 0, 150);
		rightWall.addBox(0F, 0F, 0F, 2, 16, 18);
		rightWall.setRotationPoint(-22F, 4F, -9F);
		rightWall.setTextureSize(512, 256);
		rightWall.mirror = true;
		setRotation(rightWall, 0F, 0F, 0F);
		pipeOutput = new ModelRenderer(this, 112, 38);
		pipeOutput.addBox(0F, 0F, 0F, 12, 10, 3);
		pipeOutput.setRotationPoint(24F, 10F, -22F);
		pipeOutput.setTextureSize(512, 256);
		pipeOutput.mirror = true;
		setRotation(pipeOutput, 0F, -1.570796F, 0F);
		pipe1 = new ModelRenderer(this, 112, 52);
		pipe1.addBox(-6F, 0F, -4F, 20, 8, 8);
		pipe1.setRotationPoint(0F, 12F, -9F);
		pipe1.setTextureSize(512, 256);
		pipe1.mirror = true;
		setRotation(pipe1, 0F, 0.5934119F, 0F);
		pipe2 = new ModelRenderer(this, 192, 49);
		pipe2.addBox(2F, 2F, 3F, 8, 8, 12);
		pipe2.setRotationPoint(24F, 10F, -22F);
		pipe2.setTextureSize(512, 256);
		pipe2.mirror = true;
		setRotation(pipe2, 0F, -1.570796F, 0F);
		pipeClamp1 = new ModelRenderer(this, 169, 38);
		pipeClamp1.addBox(11F, -1F, -9F, 1, 9, 10);
		pipeClamp1.setRotationPoint(0F, 12F, -9F);
		pipeClamp1.setTextureSize(512, 256);
		pipeClamp1.mirror = true;
		setRotation(pipeClamp1, 0F, 0.2268928F, 0F);
		pipeClamp2 = new ModelRenderer(this, 144, 38);
		pipeClamp2.addBox(1F, 1F, 8F, 10, 9, 1);
		pipeClamp2.setRotationPoint(24F, 10F, -22F);
		pipeClamp2.setTextureSize(512, 256);
		pipeClamp2.mirror = true;
		setRotation(pipeClamp2, 0F, -1.570796F, 0F);
	}

	@Override
	public void render(float f5) {
		bladeH1.render(f5);
		bladeC1.render(f5);
		bladeV1.render(f5);
		bladeV2.render(f5);
		bladeC2.render(f5);
		bladeH2.render(f5);
		bladeH16.render(f5);
		bladeC16.render(f5);
		bladeV16.render(f5);
		bladeH15.render(f5);
		bladeC15.render(f5);
		bladeV15.render(f5);
		bladeH14.render(f5);
		bladeC14.render(f5);
		bladeV14.render(f5);
		bladeH13.render(f5);
		bladeC13.render(f5);
		bladeV13.render(f5);
		bladeH12.render(f5);
		bladeC12.render(f5);
		bladeV12.render(f5);
		bladeH11.render(f5);
		bladeC11.render(f5);
		bladeV11.render(f5);
		bladeH10.render(f5);
		bladeC10.render(f5);
		bladeV10.render(f5);
		bladeH9.render(f5);
		bladeC9.render(f5);
		bladeV9.render(f5);
		bladeH8.render(f5);
		bladeC8.render(f5);
		bladeV8.render(f5);
		bladeC7.render(f5);
		bladeH7.render(f5);
		bladeV7.render(f5);
		bladeH6.render(f5);
		bladeC6.render(f5);
		bladeV6.render(f5);
		bladeH5.render(f5);
		bladeC5.render(f5);
		bladeV5.render(f5);
		bladeH4.render(f5);
		bladeC4.render(f5);
		bladeV4.render(f5);
		bladeH3.render(f5);
		bladeC3.render(f5);
		bladeV3.render(f5);
		grinderBase.render(f5);
		dropDoorBack.render(f5);
		dropDoorFront.render(f5);
		rotaryShaft.render(f5);
		insideWallBack.render(f5);
		insideWallFront.render(f5);
		topFrameRight.render(f5);
		topFrameFront.render(f5);
		topFrameBack.render(f5);
		topFrameLeft.render(f5);
		post4.render(f5);
		post3.render(f5);
		post2.render(f5);
		post1.render(f5);
		leftWall.render(f5);
		rightWall.render(f5);
		pipeOutput.render(f5);
		pipe1.render(f5);
		pipe2.render(f5);
		pipeClamp1.render(f5);
		pipeClamp2.render(f5);
	}

	public void renderBlades(float f5) {
		bladeH1.render(f5);
		bladeC1.render(f5);
		bladeV1.render(f5);
		bladeV2.render(f5);
		bladeC2.render(f5);
		bladeH2.render(f5);
		bladeH16.render(f5);
		bladeC16.render(f5);
		bladeV16.render(f5);
		bladeH15.render(f5);
		bladeC15.render(f5);
		bladeV15.render(f5);
		bladeH14.render(f5);
		bladeC14.render(f5);
		bladeV14.render(f5);
		bladeH13.render(f5);
		bladeC13.render(f5);
		bladeV13.render(f5);
		bladeH12.render(f5);
		bladeC12.render(f5);
		bladeV12.render(f5);
		bladeH11.render(f5);
		bladeC11.render(f5);
		bladeV11.render(f5);
		bladeH10.render(f5);
		bladeC10.render(f5);
		bladeV10.render(f5);
		bladeH9.render(f5);
		bladeC9.render(f5);
		bladeV9.render(f5);
		bladeH8.render(f5);
		bladeC8.render(f5);
		bladeV8.render(f5);
		bladeC7.render(f5);
		bladeH7.render(f5);
		bladeV7.render(f5);
		bladeH6.render(f5);
		bladeC6.render(f5);
		bladeV6.render(f5);
		bladeH5.render(f5);
		bladeC5.render(f5);
		bladeV5.render(f5);
		bladeH4.render(f5);
		bladeC4.render(f5);
		bladeV4.render(f5);
		bladeH3.render(f5);
		bladeC3.render(f5);
		bladeV3.render(f5);
	}
	
	public void rotateBlades(float angle) {
		bladeH1.rotateAngleX = -angle;
		bladeC1.rotateAngleX = -angle;
		bladeV1.rotateAngleX = -angle;
		bladeV2.rotateAngleX = angle;
		bladeC2.rotateAngleX = angle;
		bladeH2.rotateAngleX = angle;
		bladeH16.rotateAngleX = -angle;
		bladeC16.rotateAngleX = -angle;
		bladeV16.rotateAngleX = -angle;
		bladeH15.rotateAngleX = angle;
		bladeC15.rotateAngleX = angle;
		bladeV15.rotateAngleX = angle;
		bladeH14.rotateAngleX = -angle;
		bladeC14.rotateAngleX = -angle;
		bladeV14.rotateAngleX = -angle;
		bladeH13.rotateAngleX = angle;
		bladeC13.rotateAngleX = angle;
		bladeV13.rotateAngleX = angle;
		bladeH12.rotateAngleX = -angle;
		bladeC12.rotateAngleX = -angle;
		bladeV12.rotateAngleX = -angle;
		bladeH11.rotateAngleX = angle;
		bladeC11.rotateAngleX = angle;
		bladeV11.rotateAngleX = angle;
		bladeH10.rotateAngleX = -angle;
		bladeC10.rotateAngleX = -angle;
		bladeV10.rotateAngleX = -angle;
		bladeH9.rotateAngleX = angle;
		bladeC9.rotateAngleX = angle;
		bladeV9.rotateAngleX = angle;
		bladeH8.rotateAngleX = -angle;
		bladeC8.rotateAngleX = -angle;
		bladeV8.rotateAngleX = -angle;
		bladeC7.rotateAngleX = angle;
		bladeH7.rotateAngleX = angle;
		bladeV7.rotateAngleX = angle;
		bladeH6.rotateAngleX = -angle;
		bladeC6.rotateAngleX = -angle;
		bladeV6.rotateAngleX = -angle;
		bladeH5.rotateAngleX = angle;
		bladeC5.rotateAngleX = angle;
		bladeV5.rotateAngleX = angle;
		bladeH4.rotateAngleX = -angle;
		bladeC4.rotateAngleX = -angle;
		bladeV4.rotateAngleX = -angle;
		bladeH3.rotateAngleX = angle;
		bladeC3.rotateAngleX = angle;
		bladeV3.rotateAngleX = angle;
	}
	
	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

}
